# var_na <- subset(df_welsh, select = -var_full)
print(head(var_na))
results <- matrix(NaN, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
# print(results)
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
}
break
}
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
# var_full <- as.vector(var_full)
var_na <-variables_df[!(variables_df %in% var_full)]
#var_na <- df_welsh[-var_full]
# var_na <- subset(df_welsh, select = -var_full)
print(head(var_na))
results <- matrix(NaN, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
# print(results)
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
}
break
}
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
# var_full <- as.vector(var_full)
var_na <-variables_df[!(variables_df %in% var_full)]
#var_na <- df_welsh[-var_full]
# var_na <- subset(df_welsh, select = -var_full)
print(head(var_na))
results <- matrix(NaN, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
# print(results)
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
}
break
}
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix(NaN, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
print(results)
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
}
break
}
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix(NaN, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- pvalue
}
break
}
print(results)
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix(NaN, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- pvalue
}
}
print(results)
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix(NaN, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
# print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- pvalue
}
}
print(results)
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix(NA, ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
# print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- pvalue
}
}
print(results)
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix("-", ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
# print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- pvalue
}
}
print(results)
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix("-", ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
# print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- pvalue
}
}
#print(results)
df_res <- data.frame(results)
print(head(df_res))
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix("-", ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
# print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- pvalue
}
}
#print(results)
df_res <- data.frame(results)
print(head(df_res))
write.csv(df_res, "mcar_variables.csv")
df_welsh <- subset(df, select = -c(y))
variables_df <- colnames(df_welsh)
# print(variables_df)
# Create result matrix
var_full <- colnames(df_welsh[, !colSums(is.na(df_welsh))])
var_na <- variables_df[!(variables_df %in% var_full)]
results <- matrix("-", ncol = length(variables_df), nrow = length(variables_df) - ncol_full)
colnames(results) <- variables_df
rownames(results) <- var_na
for (variable in variables_df){
# Skip variables with no missing values
if (sum(is.na(df_welsh[variable])) == 0){
next
}
# print(variable)
# Split the df across the variable na and full (not na)
df_var_na <- df_welsh[is.na(df_welsh[variable]),]
df_var_full <- df_welsh[!is.na(df_welsh[variable]),]
# Iterate over all other variables
for (var_compare in  variables_df){
# Skip if it is the same variable
if (variable == var_compare){
next
}
# print(var_compare)
if (class(df_var_na[, var_compare]) == "character"){
# Do the chi-squared test of homogeneity for categorical variables
freq_na <- as.data.frame(table(df_var_na[, var_compare], useNA="always"))[, "Freq"]
freq_full <- as.data.frame(table(df_var_full[, var_compare], useNA="always"))[, "Freq"]
freq <- cbind(freq_na, freq_full)
pvalue <- chisq.test(freq)$p.value
} else {
# Do the welch test for numerical variables
vec_na <- df_var_na[, var_compare]
vec_full <- df_var_full[, var_compare]
pvalue <- t.test(vec_na, vec_full)$p.value
}
# Save the results
results[variable, var_compare] <- round(pvalue, digits = 4)
}
}
#print(results)
df_res <- data.frame(results)
print(head(df_res))
write.csv(df_res, "mcar_variables.csv")
